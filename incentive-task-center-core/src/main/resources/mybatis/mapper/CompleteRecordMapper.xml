<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fun.pullock.incentive.core.dao.mapper.CompleteRecordMapper">
  <resultMap id="BaseResultMap" type="fun.pullock.incentive.core.dao.model.CompleteRecordDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="complete_date" jdbcType="DATE" property="completeDate" />
    <result column="complete_time" jdbcType="TIME" property="completeTime" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="unique_source_id" jdbcType="VARCHAR" property="uniqueSourceId" />
    <result column="after_complete_type" jdbcType="SMALLINT" property="afterCompleteType" />
    <result column="after_complete_rule" jdbcType="LONGVARCHAR" property="afterCompleteRule" />
  </resultMap>

  <sql id="Base_Column_List">
    id, create_time, update_time,
    user_id, task_id, status,
    complete_date, complete_time, source,
    unique_source_id, after_complete_type, after_complete_rule
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from complete_record
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from complete_record
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="fun.pullock.incentive.core.dao.model.CompleteRecordDO">
    insert into complete_record (
      id, create_time, update_time,
      user_id, task_id, status,
      complete_date, complete_time, source,
      unique_source_id, after_complete_type, after_complete_rule
    ) values (
      #{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{userId,jdbcType=BIGINT}, #{taskId,jdbcType=BIGINT}, #{status,jdbcType=SMALLINT},
      #{completeDate,jdbcType=DATE}, #{completeTime,jdbcType=TIME}, #{source,jdbcType=VARCHAR},
      #{uniqueSourceId,jdbcType=VARCHAR}, #{afterCompleteType,jdbcType=SMALLINT}, #{afterCompleteRule,jdbcType=LONGVARCHAR}
    )
  </insert>

  <insert id="insertSelective" parameterType="fun.pullock.incentive.core.dao.model.CompleteRecordDO">
    insert into complete_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="completeDate != null">
        complete_date,
      </if>
      <if test="completeTime != null">
        complete_time,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="uniqueSourceId != null">
        unique_source_id,
      </if>
      <if test="afterCompleteType != null">
        after_complete_type,
      </if>
      <if test="afterCompleteRule != null">
        after_complete_rule,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="completeDate != null">
        #{completeDate,jdbcType=DATE},
      </if>
      <if test="completeTime != null">
        #{completeTime,jdbcType=TIME},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="uniqueSourceId != null">
        #{uniqueSourceId,jdbcType=VARCHAR},
      </if>
      <if test="afterCompleteType != null">
        #{afterCompleteType,jdbcType=SMALLINT},
      </if>
      <if test="afterCompleteRule != null">
        #{afterCompleteRule,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="fun.pullock.incentive.core.dao.model.CompleteRecordDO">
    update complete_record
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="completeDate != null">
        complete_date = #{completeDate,jdbcType=DATE},
      </if>
      <if test="completeTime != null">
        complete_time = #{completeTime,jdbcType=TIME},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="uniqueSourceId != null">
        unique_source_id = #{uniqueSourceId,jdbcType=VARCHAR},
      </if>
      <if test="afterCompleteType != null">
        after_complete_type = #{afterCompleteType,jdbcType=SMALLINT},
      </if>
      <if test="afterCompleteRule != null">
        after_complete_rule = #{afterCompleteRule,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="fun.pullock.incentive.core.dao.model.CompleteRecordDO">
    update complete_record
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=BIGINT},
      task_id = #{taskId,jdbcType=BIGINT},
      status = #{status,jdbcType=SMALLINT},
      complete_date = #{completeDate,jdbcType=DATE},
      complete_time = #{completeTime,jdbcType=TIME},
      source = #{source,jdbcType=VARCHAR},
      unique_source_id = #{uniqueSourceId,jdbcType=VARCHAR},
      after_complete_type = #{afterCompleteType,jdbcType=SMALLINT},
      after_complete_rule = #{afterCompleteRule,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByUserTask" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from complete_record
    where user_id = #{userId,jdbcType=BIGINT}
      and task_id = #{taskId,jdbcType=BIGINT}
  </select>

  <select id="selectByUserTaskDate" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from complete_record
    where user_id = #{userId,jdbcType=BIGINT}
      and task_id = #{taskId,jdbcType=BIGINT}
      and complete_date <![CDATA[ >= ]]> #{completeDateStart,jdbcType=DATE}
      and complete_date <![CDATA[ <= ]]> #{completeDateEnd,jdbcType=DATE}
  </select>

  <update id="updateStatus">
    update complete_record
    set update_time = now(),
        status = #{newStatus,jdbcType=SMALLINT}
    where id = #{id,jdbcType=BIGINT}
      and status = #{oldStatus,jdbcType=SMALLINT}
  </update>
</mapper>